{"env_info": "sys.platform: linux\nPython: 3.9.15 (main, Nov 24 2022, 14:31:59) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA RTX A4000\nCUDA_HOME: /opt/anaconda3\nNVCC: Cuda compilation tools, release 11.7, V11.7.99\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\nPyTorch: 1.13.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 9.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.7\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.5\n  - Magma 2.6.1\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.14.0\nOpenCV: 4.6.0\nMMCV: 1.7.0\nMMCV Compiler: GCC 9.3\nMMCV CUDA Compiler: 11.7\nMMDetection: 2.26.0+31c8495", "config": "dataset_type = 'CocoDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[25.526, 0.386, 52.85], std=[53.347, 9.402, 53.172], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1020, 768), keep_ratio=True),\n    dict(\n        type='RandomFlip',\n        flip_ratio=0.5,\n        direction=['horizontal', 'vertical']),\n    dict(\n        type='Normalize',\n        mean=[25.526, 0.386, 52.85],\n        std=[53.347, 9.402, 53.172],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=['img', 'gt_bboxes', 'gt_labels'],\n        meta_keys=('filename', 'ori_shape', 'img_shape', 'img_norm_cfg',\n                   'pad_shape', 'scale_factor'))\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1020, 768),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(\n                type='RandomFlip',\n                flip_ratio=0.5,\n                direction=['horizontal', 'vertical']),\n            dict(\n                type='Normalize',\n                mean=[25.526, 0.386, 52.85],\n                std=[53.347, 9.402, 53.172],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=5,\n    workers_per_gpu=1,\n    train=dict(\n        type='CocoDataset',\n        ann_file=\n        '/share/NAS/Benz_Cell/cellLabel-main/Coco_File/Cell_TrainNuc_April.json',\n        img_prefix='/share/NAS/Benz_Cell/cellLabel-main/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1020, 768), keep_ratio=True),\n            dict(\n                type='RandomFlip',\n                flip_ratio=0.5,\n                direction=['horizontal', 'vertical']),\n            dict(\n                type='Normalize',\n                mean=[25.526, 0.386, 52.85],\n                std=[53.347, 9.402, 53.172],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=['img', 'gt_bboxes', 'gt_labels'],\n                meta_keys=('filename', 'ori_shape', 'img_shape',\n                           'img_norm_cfg', 'pad_shape', 'scale_factor'))\n        ],\n        classes=('object', )),\n    val=dict(\n        type='CocoDataset',\n        ann_file=\n        '/share/NAS/Benz_Cell/cellLabel-main/Coco_File/Cell_TestNuc_April.json',\n        img_prefix='/share/NAS/Benz_Cell/cellLabel-main/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1020, 768),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(\n                        type='RandomFlip',\n                        flip_ratio=0.5,\n                        direction=['horizontal', 'vertical']),\n                    dict(\n                        type='Normalize',\n                        mean=[25.526, 0.386, 52.85],\n                        std=[53.347, 9.402, 53.172],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('object', )),\n    test=dict(\n        type='CocoDataset',\n        ann_file=\n        '/share/NAS/Benz_Cell/cellLabel-main/Coco_File/Cell_TestNuc_April.json',\n        img_prefix='/share/NAS/Benz_Cell/cellLabel-main/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1020, 768),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(\n                        type='RandomFlip',\n                        flip_ratio=0.5,\n                        direction=['horizontal', 'vertical']),\n                    dict(\n                        type='Normalize',\n                        mean=[25.526, 0.386, 52.85],\n                        std=[53.347, 9.402, 53.172],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('object', )))\nevaluation = dict(interval=1, metric='bbox', save_best='bbox_mAP')\noptimizer = dict(type='SGD', lr=0.005, momentum=0.9, weight_decay=0.0005)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=30)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = 'pretrained_models/atss_r50_fpn_1x_coco_20200209-985f7bd0.pth'\nresume_from = None\nworkflow = [('train', 1), ('val', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nauto_scale_lr = dict(enable=False, base_batch_size=16)\nmodel = dict(\n    type='ATSS',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=1,\n        add_extra_convs='on_output',\n        num_outs=5),\n    bbox_head=dict(\n        type='ATSSHead',\n        num_classes=1,\n        in_channels=256,\n        stacked_convs=4,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            ratios=[1.0],\n            octave_base_scale=8,\n            scales_per_octave=1,\n            strides=[8, 16, 32, 64, 128]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[0.1, 0.1, 0.2, 0.2]),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=1.0),\n        loss_bbox=dict(type='GIoULoss', loss_weight=2.0),\n        loss_centerness=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0)),\n    train_cfg=dict(\n        assigner=dict(type='ATSSAssigner', topk=9),\n        allowed_border=-1,\n        pos_weight=-1,\n        debug=False),\n    test_cfg=dict(\n        nms_pre=1000,\n        min_bbox_size=0,\n        score_thr=0.05,\n        nms=dict(type='nms', iou_threshold=0.6),\n        max_per_img=300))\nclasses = ('object', )\nimg_scale = (1020, 768)\nbase = '/share/NAS/Benz_Cell/cellLabel-main/'\ndevice = 'cuda'\nwork_dir = './work_dirs/New_OCT/ATSS_R50_CellNuc'\nauto_resume = False\ngpu_ids = [0]\n", "seed": 973157936, "exp_name": "atss_r50_CellNucNo.py", "hook_msgs": {}}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00099, "memory": 5535, "data_time": 0.02959, "loss_cls": 0.3705, "loss_bbox": 0.25745, "loss_centerness": 0.62725, "loss": 1.2552, "time": 0.44379}
{"mode": "val", "epoch": 1, "iter": 312, "lr": 0.00177, "bbox_mAP": 0.774, "bbox_mAP_50": 0.965, "bbox_mAP_75": 0.926, "bbox_mAP_s": 0.418, "bbox_mAP_m": 0.845, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.774 0.965 0.926 0.418 0.845 -1.000"}
{"mode": "val", "epoch": 1, "iter": 63, "lr": 0.00177, "memory": 5547, "data_time": 0.04372, "loss_cls": 0.06691, "loss_bbox": 0.15947, "loss_centerness": 0.62054, "loss": 0.84693, "time": 0.21679}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.00277, "memory": 5548, "data_time": 0.0294, "loss_cls": 0.05863, "loss_bbox": 0.14937, "loss_centerness": 0.61858, "loss": 0.82659, "time": 0.43148}
{"mode": "val", "epoch": 2, "iter": 312, "lr": 0.00355, "bbox_mAP": 0.791, "bbox_mAP_50": 0.967, "bbox_mAP_75": 0.931, "bbox_mAP_s": 0.476, "bbox_mAP_m": 0.863, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.791 0.967 0.931 0.476 0.863 -1.000"}
{"mode": "val", "epoch": 2, "iter": 63, "lr": 0.00355, "memory": 5548, "data_time": 0.04438, "loss_cls": 0.05393, "loss_bbox": 0.14498, "loss_centerness": 0.6197, "loss": 0.81861, "time": 0.21783}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.00455, "memory": 5548, "data_time": 0.02988, "loss_cls": 0.04994, "loss_bbox": 0.13736, "loss_centerness": 0.61824, "loss": 0.80554, "time": 0.43216}
{"mode": "val", "epoch": 3, "iter": 312, "lr": 0.005, "bbox_mAP": 0.802, "bbox_mAP_50": 0.967, "bbox_mAP_75": 0.942, "bbox_mAP_s": 0.502, "bbox_mAP_m": 0.875, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.802 0.967 0.942 0.502 0.875 -1.000"}
{"mode": "val", "epoch": 3, "iter": 63, "lr": 0.005, "memory": 5548, "data_time": 0.04463, "loss_cls": 0.04949, "loss_bbox": 0.13719, "loss_centerness": 0.61962, "loss": 0.8063, "time": 0.21746}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.005, "memory": 5549, "data_time": 0.03045, "loss_cls": 0.04697, "loss_bbox": 0.13428, "loss_centerness": 0.61816, "loss": 0.79941, "time": 0.43322}
{"mode": "val", "epoch": 4, "iter": 312, "lr": 0.005, "bbox_mAP": 0.798, "bbox_mAP_50": 0.976, "bbox_mAP_75": 0.943, "bbox_mAP_s": 0.521, "bbox_mAP_m": 0.873, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.798 0.976 0.943 0.521 0.873 -1.000"}
{"mode": "val", "epoch": 4, "iter": 63, "lr": 0.005, "memory": 5549, "data_time": 0.0637, "loss_cls": 0.04752, "loss_bbox": 0.13897, "loss_centerness": 0.61922, "loss": 0.80572, "time": 0.23886}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.005, "memory": 5549, "data_time": 0.0301, "loss_cls": 0.04407, "loss_bbox": 0.12852, "loss_centerness": 0.618, "loss": 0.7906, "time": 0.43263}
{"mode": "val", "epoch": 5, "iter": 312, "lr": 0.005, "bbox_mAP": 0.807, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.503, "bbox_mAP_m": 0.88, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.807 0.968 0.944 0.503 0.880 -1.000"}
{"mode": "val", "epoch": 5, "iter": 63, "lr": 0.005, "memory": 5549, "data_time": 0.04447, "loss_cls": 0.0463, "loss_bbox": 0.13108, "loss_centerness": 0.61905, "loss": 0.79643, "time": 0.2183}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.005, "memory": 5549, "data_time": 0.03039, "loss_cls": 0.04297, "loss_bbox": 0.12763, "loss_centerness": 0.61812, "loss": 0.78872, "time": 0.43354}
{"mode": "val", "epoch": 6, "iter": 312, "lr": 0.005, "bbox_mAP": 0.807, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.479, "bbox_mAP_m": 0.881, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.807 0.968 0.944 0.479 0.881 -1.000"}
{"mode": "val", "epoch": 6, "iter": 63, "lr": 0.005, "memory": 5549, "data_time": 0.04343, "loss_cls": 0.04594, "loss_bbox": 0.13054, "loss_centerness": 0.61903, "loss": 0.79551, "time": 0.21685}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.005, "memory": 5549, "data_time": 0.03017, "loss_cls": 0.04307, "loss_bbox": 0.12523, "loss_centerness": 0.61773, "loss": 0.78603, "time": 0.43302}
{"mode": "val", "epoch": 7, "iter": 312, "lr": 0.005, "bbox_mAP": 0.809, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.47, "bbox_mAP_m": 0.883, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.809 0.968 0.944 0.470 0.883 -1.000"}
{"mode": "val", "epoch": 7, "iter": 63, "lr": 0.005, "memory": 5549, "data_time": 0.04345, "loss_cls": 0.04457, "loss_bbox": 0.12804, "loss_centerness": 0.61891, "loss": 0.79152, "time": 0.21618}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 0.005, "memory": 5549, "data_time": 0.03032, "loss_cls": 0.04097, "loss_bbox": 0.12296, "loss_centerness": 0.61767, "loss": 0.7816, "time": 0.43376}
{"mode": "val", "epoch": 8, "iter": 312, "lr": 0.005, "bbox_mAP": 0.809, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.53, "bbox_mAP_m": 0.883, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.809 0.968 0.944 0.530 0.883 -1.000"}
{"mode": "val", "epoch": 8, "iter": 63, "lr": 0.005, "memory": 5549, "data_time": 0.04372, "loss_cls": 0.04429, "loss_bbox": 0.12716, "loss_centerness": 0.61891, "loss": 0.79037, "time": 0.21668}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 0.0005, "memory": 5549, "data_time": 0.02955, "loss_cls": 0.04007, "loss_bbox": 0.12022, "loss_centerness": 0.61741, "loss": 0.7777, "time": 0.43283}
{"mode": "val", "epoch": 9, "iter": 312, "lr": 0.0005, "bbox_mAP": 0.811, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.508, "bbox_mAP_m": 0.885, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.811 0.968 0.944 0.508 0.885 -1.000"}
{"mode": "val", "epoch": 9, "iter": 63, "lr": 0.0005, "memory": 5549, "data_time": 0.04374, "loss_cls": 0.04338, "loss_bbox": 0.12558, "loss_centerness": 0.61884, "loss": 0.7878, "time": 0.21718}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 0.0005, "memory": 5549, "data_time": 0.03002, "loss_cls": 0.03985, "loss_bbox": 0.11883, "loss_centerness": 0.61709, "loss": 0.77577, "time": 0.43294}
{"mode": "val", "epoch": 10, "iter": 312, "lr": 0.0005, "bbox_mAP": 0.811, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.486, "bbox_mAP_m": 0.885, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.811 0.968 0.944 0.486 0.885 -1.000"}
{"mode": "val", "epoch": 10, "iter": 63, "lr": 0.0005, "memory": 5549, "data_time": 0.04353, "loss_cls": 0.0434, "loss_bbox": 0.12517, "loss_centerness": 0.61872, "loss": 0.7873, "time": 0.21767}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 0.0005, "memory": 5549, "data_time": 0.03029, "loss_cls": 0.03976, "loss_bbox": 0.11923, "loss_centerness": 0.61754, "loss": 0.77653, "time": 0.4337}
{"mode": "val", "epoch": 11, "iter": 312, "lr": 0.0005, "bbox_mAP": 0.81, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.469, "bbox_mAP_m": 0.884, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.810 0.968 0.944 0.469 0.884 -1.000"}
{"mode": "val", "epoch": 11, "iter": 63, "lr": 0.0005, "memory": 5549, "data_time": 0.04414, "loss_cls": 0.04353, "loss_bbox": 0.12629, "loss_centerness": 0.61874, "loss": 0.78856, "time": 0.21661}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 5e-05, "memory": 5549, "data_time": 0.03319, "loss_cls": 0.03948, "loss_bbox": 0.11901, "loss_centerness": 0.6172, "loss": 0.77569, "time": 0.43555}
{"mode": "val", "epoch": 12, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.811, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.487, "bbox_mAP_m": 0.885, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.811 0.968 0.944 0.487 0.885 -1.000"}
{"mode": "val", "epoch": 12, "iter": 63, "lr": 5e-05, "memory": 5549, "data_time": 0.04362, "loss_cls": 0.04334, "loss_bbox": 0.12593, "loss_centerness": 0.61879, "loss": 0.78806, "time": 0.21607}
{"mode": "train", "epoch": 13, "iter": 100, "lr": 5e-05, "memory": 5549, "data_time": 0.03022, "loss_cls": 0.03999, "loss_bbox": 0.12037, "loss_centerness": 0.61731, "loss": 0.77767, "time": 0.43414}
{"mode": "val", "epoch": 13, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.811, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.488, "bbox_mAP_m": 0.885, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.811 0.968 0.944 0.488 0.885 -1.000"}
{"mode": "val", "epoch": 13, "iter": 63, "lr": 5e-05, "memory": 5549, "data_time": 0.06389, "loss_cls": 0.04353, "loss_bbox": 0.12619, "loss_centerness": 0.61882, "loss": 0.78855, "time": 0.23873}
{"mode": "train", "epoch": 14, "iter": 100, "lr": 5e-05, "memory": 5549, "data_time": 0.03034, "loss_cls": 0.04005, "loss_bbox": 0.11868, "loss_centerness": 0.6174, "loss": 0.77613, "time": 0.43266}
{"mode": "val", "epoch": 14, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.811, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.488, "bbox_mAP_m": 0.885, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.811 0.968 0.944 0.488 0.885 -1.000"}
{"mode": "val", "epoch": 14, "iter": 63, "lr": 5e-05, "memory": 5549, "data_time": 0.04385, "loss_cls": 0.04369, "loss_bbox": 0.12611, "loss_centerness": 0.6189, "loss": 0.78869, "time": 0.21686}
{"mode": "train", "epoch": 15, "iter": 100, "lr": 5e-05, "memory": 5549, "data_time": 0.03073, "loss_cls": 0.04022, "loss_bbox": 0.11962, "loss_centerness": 0.61728, "loss": 0.77711, "time": 0.43416}
{"mode": "val", "epoch": 15, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.811, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.488, "bbox_mAP_m": 0.886, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.811 0.968 0.944 0.488 0.886 -1.000"}
{"mode": "val", "epoch": 15, "iter": 63, "lr": 5e-05, "memory": 5549, "data_time": 0.0434, "loss_cls": 0.04356, "loss_bbox": 0.12593, "loss_centerness": 0.61893, "loss": 0.78842, "time": 0.21673}
{"mode": "train", "epoch": 16, "iter": 100, "lr": 5e-05, "memory": 5549, "data_time": 0.03018, "loss_cls": 0.03967, "loss_bbox": 0.11871, "loss_centerness": 0.61731, "loss": 0.77569, "time": 0.43342}
{"mode": "val", "epoch": 16, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.811, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.488, "bbox_mAP_m": 0.885, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.811 0.968 0.944 0.488 0.885 -1.000"}
{"mode": "val", "epoch": 16, "iter": 63, "lr": 5e-05, "memory": 5549, "data_time": 0.04285, "loss_cls": 0.04315, "loss_bbox": 0.12521, "loss_centerness": 0.6187, "loss": 0.78706, "time": 0.22709}
{"mode": "train", "epoch": 17, "iter": 100, "lr": 5e-05, "memory": 5549, "data_time": 0.0297, "loss_cls": 0.04009, "loss_bbox": 0.11975, "loss_centerness": 0.61748, "loss": 0.77732, "time": 0.43262}
{"mode": "val", "epoch": 17, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.813, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.488, "bbox_mAP_m": 0.885, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.813 0.968 0.944 0.488 0.885 -1.000"}
{"mode": "val", "epoch": 17, "iter": 63, "lr": 5e-05, "memory": 5549, "data_time": 0.04632, "loss_cls": 0.0436, "loss_bbox": 0.12628, "loss_centerness": 0.61909, "loss": 0.78897, "time": 0.21995}
{"mode": "train", "epoch": 18, "iter": 100, "lr": 5e-05, "memory": 5549, "data_time": 0.02983, "loss_cls": 0.03974, "loss_bbox": 0.12002, "loss_centerness": 0.6175, "loss": 0.77727, "time": 0.43262}
{"mode": "val", "epoch": 18, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.811, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.486, "bbox_mAP_m": 0.885, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.811 0.968 0.944 0.486 0.885 -1.000"}
{"mode": "val", "epoch": 18, "iter": 63, "lr": 5e-05, "memory": 5549, "data_time": 0.04595, "loss_cls": 0.0437, "loss_bbox": 0.1266, "loss_centerness": 0.61894, "loss": 0.78924, "time": 0.2197}
{"mode": "train", "epoch": 19, "iter": 100, "lr": 5e-05, "memory": 5549, "data_time": 0.02953, "loss_cls": 0.03967, "loss_bbox": 0.11965, "loss_centerness": 0.61741, "loss": 0.77673, "time": 0.43246}
{"mode": "val", "epoch": 19, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.811, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.488, "bbox_mAP_m": 0.886, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.811 0.968 0.944 0.488 0.886 -1.000"}
{"mode": "val", "epoch": 19, "iter": 63, "lr": 5e-05, "memory": 5549, "data_time": 0.04379, "loss_cls": 0.04409, "loss_bbox": 0.12612, "loss_centerness": 0.61896, "loss": 0.78917, "time": 0.21834}
{"mode": "train", "epoch": 20, "iter": 100, "lr": 5e-05, "memory": 5549, "data_time": 0.02983, "loss_cls": 0.0398, "loss_bbox": 0.11897, "loss_centerness": 0.61751, "loss": 0.77627, "time": 0.43287}
{"mode": "val", "epoch": 20, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.811, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.487, "bbox_mAP_m": 0.885, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.811 0.968 0.944 0.487 0.885 -1.000"}
{"mode": "val", "epoch": 20, "iter": 63, "lr": 5e-05, "memory": 5549, "data_time": 0.04422, "loss_cls": 0.04338, "loss_bbox": 0.12472, "loss_centerness": 0.6186, "loss": 0.7867, "time": 0.21704}
{"mode": "train", "epoch": 21, "iter": 100, "lr": 5e-05, "memory": 5549, "data_time": 0.03029, "loss_cls": 0.03917, "loss_bbox": 0.1186, "loss_centerness": 0.61712, "loss": 0.77488, "time": 0.43335}
{"mode": "val", "epoch": 21, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.811, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.486, "bbox_mAP_m": 0.884, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.811 0.968 0.944 0.486 0.884 -1.000"}
{"mode": "val", "epoch": 21, "iter": 63, "lr": 5e-05, "memory": 5549, "data_time": 0.04491, "loss_cls": 0.04354, "loss_bbox": 0.12527, "loss_centerness": 0.61885, "loss": 0.78765, "time": 0.2183}
{"mode": "train", "epoch": 22, "iter": 100, "lr": 5e-05, "memory": 5549, "data_time": 0.03021, "loss_cls": 0.03917, "loss_bbox": 0.11771, "loss_centerness": 0.61751, "loss": 0.77439, "time": 0.43314}
{"mode": "val", "epoch": 22, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.811, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.488, "bbox_mAP_m": 0.886, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.811 0.968 0.944 0.488 0.886 -1.000"}
{"mode": "val", "epoch": 22, "iter": 63, "lr": 5e-05, "memory": 5549, "data_time": 0.04479, "loss_cls": 0.04401, "loss_bbox": 0.12594, "loss_centerness": 0.61887, "loss": 0.78882, "time": 0.21835}
{"mode": "train", "epoch": 23, "iter": 100, "lr": 5e-05, "memory": 5549, "data_time": 0.03039, "loss_cls": 0.03914, "loss_bbox": 0.11746, "loss_centerness": 0.61756, "loss": 0.77416, "time": 0.43386}
{"mode": "val", "epoch": 23, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.811, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.485, "bbox_mAP_m": 0.884, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.811 0.968 0.944 0.485 0.884 -1.000"}
{"mode": "val", "epoch": 23, "iter": 63, "lr": 5e-05, "memory": 5549, "data_time": 0.05646, "loss_cls": 0.04386, "loss_bbox": 0.12623, "loss_centerness": 0.61896, "loss": 0.78905, "time": 0.23066}
{"mode": "train", "epoch": 24, "iter": 100, "lr": 5e-05, "memory": 5549, "data_time": 0.0302, "loss_cls": 0.0392, "loss_bbox": 0.11847, "loss_centerness": 0.61758, "loss": 0.77525, "time": 0.43444}
{"mode": "val", "epoch": 24, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.813, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.487, "bbox_mAP_m": 0.885, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.813 0.968 0.944 0.487 0.885 -1.000"}
{"mode": "val", "epoch": 24, "iter": 63, "lr": 5e-05, "memory": 5549, "data_time": 0.04346, "loss_cls": 0.0434, "loss_bbox": 0.12518, "loss_centerness": 0.6187, "loss": 0.78727, "time": 0.21717}
{"mode": "train", "epoch": 25, "iter": 100, "lr": 5e-05, "memory": 5549, "data_time": 0.03049, "loss_cls": 0.03973, "loss_bbox": 0.11974, "loss_centerness": 0.61745, "loss": 0.77692, "time": 0.43293}
{"mode": "val", "epoch": 25, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.812, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.488, "bbox_mAP_m": 0.886, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.812 0.968 0.944 0.488 0.886 -1.000"}
{"mode": "val", "epoch": 25, "iter": 63, "lr": 5e-05, "memory": 5549, "data_time": 0.04361, "loss_cls": 0.04341, "loss_bbox": 0.12589, "loss_centerness": 0.61884, "loss": 0.78814, "time": 0.21734}
{"mode": "train", "epoch": 26, "iter": 100, "lr": 5e-05, "memory": 5549, "data_time": 0.02992, "loss_cls": 0.03954, "loss_bbox": 0.11855, "loss_centerness": 0.61732, "loss": 0.7754, "time": 0.43312}
{"mode": "val", "epoch": 26, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.812, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.487, "bbox_mAP_m": 0.886, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.812 0.968 0.944 0.487 0.886 -1.000"}
{"mode": "val", "epoch": 26, "iter": 63, "lr": 5e-05, "memory": 5549, "data_time": 0.04389, "loss_cls": 0.04386, "loss_bbox": 0.12609, "loss_centerness": 0.61903, "loss": 0.78897, "time": 0.21706}
{"mode": "train", "epoch": 27, "iter": 100, "lr": 5e-05, "memory": 5549, "data_time": 0.03004, "loss_cls": 0.03938, "loss_bbox": 0.11733, "loss_centerness": 0.61723, "loss": 0.77394, "time": 0.43375}
{"mode": "val", "epoch": 27, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.812, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.486, "bbox_mAP_m": 0.886, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.812 0.968 0.944 0.486 0.886 -1.000"}
{"mode": "val", "epoch": 27, "iter": 63, "lr": 5e-05, "memory": 5549, "data_time": 0.04322, "loss_cls": 0.04362, "loss_bbox": 0.12617, "loss_centerness": 0.61894, "loss": 0.78873, "time": 0.21688}
{"mode": "train", "epoch": 28, "iter": 100, "lr": 5e-05, "memory": 5549, "data_time": 0.02957, "loss_cls": 0.03981, "loss_bbox": 0.11902, "loss_centerness": 0.61722, "loss": 0.77604, "time": 0.43192}
{"mode": "val", "epoch": 28, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.812, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.488, "bbox_mAP_m": 0.886, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.812 0.968 0.944 0.488 0.886 -1.000"}
{"mode": "val", "epoch": 28, "iter": 63, "lr": 5e-05, "memory": 5549, "data_time": 0.04422, "loss_cls": 0.04358, "loss_bbox": 0.12508, "loss_centerness": 0.61893, "loss": 0.78758, "time": 0.21789}
{"mode": "train", "epoch": 29, "iter": 100, "lr": 5e-05, "memory": 5549, "data_time": 0.03011, "loss_cls": 0.03993, "loss_bbox": 0.11937, "loss_centerness": 0.61732, "loss": 0.77662, "time": 0.43261}
{"mode": "val", "epoch": 29, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.811, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.486, "bbox_mAP_m": 0.886, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.811 0.968 0.944 0.486 0.886 -1.000"}
{"mode": "val", "epoch": 29, "iter": 63, "lr": 5e-05, "memory": 5549, "data_time": 0.06244, "loss_cls": 0.04351, "loss_bbox": 0.12545, "loss_centerness": 0.61886, "loss": 0.78782, "time": 0.23616}
{"mode": "train", "epoch": 30, "iter": 100, "lr": 5e-05, "memory": 5549, "data_time": 0.03016, "loss_cls": 0.03962, "loss_bbox": 0.11939, "loss_centerness": 0.61716, "loss": 0.77616, "time": 0.43275}
{"mode": "val", "epoch": 30, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.812, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.488, "bbox_mAP_m": 0.885, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.812 0.968 0.944 0.488 0.885 -1.000"}
{"mode": "val", "epoch": 30, "iter": 63, "lr": 5e-05, "memory": 5549, "data_time": 0.04348, "loss_cls": 0.0434, "loss_bbox": 0.12558, "loss_centerness": 0.61883, "loss": 0.78781, "time": 0.21612}
