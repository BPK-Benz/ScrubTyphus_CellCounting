{"env_info": "sys.platform: linux\nPython: 3.9.15 (main, Nov 24 2022, 14:31:59) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA RTX A4000\nCUDA_HOME: /opt/anaconda3\nNVCC: Cuda compilation tools, release 11.7, V11.7.99\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\nPyTorch: 1.13.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 9.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.7\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.5\n  - Magma 2.6.1\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.14.0\nOpenCV: 4.6.0\nMMCV: 1.7.0\nMMCV Compiler: GCC 9.3\nMMCV CUDA Compiler: 11.7\nMMDetection: 2.26.0+31c8495", "config": "dataset_type = 'CocoDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[25.526, 0.386, 52.85], std=[53.347, 9.402, 53.172], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(1020, 768), keep_ratio=True),\n    dict(\n        type='RandomFlip',\n        flip_ratio=0.5,\n        direction=['horizontal', 'vertical']),\n    dict(type='Pad', size_divisor=32),\n    dict(\n        type='Normalize',\n        mean=[25.526, 0.386, 52.85],\n        std=[53.347, 9.402, 53.172],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=['img', 'gt_bboxes', 'gt_labels'],\n        meta_keys=('filename', 'ori_shape', 'img_shape', 'img_norm_cfg',\n                   'pad_shape', 'scale_factor'))\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1020, 768),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[25.526, 0.386, 52.85],\n                std=[53.347, 9.402, 53.172],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=5,\n    workers_per_gpu=1,\n    train=dict(\n        type='CocoDataset',\n        ann_file=\n        '/share/NAS/Benz_Cell/cellLabel-main/Coco_File/Cell_TrainNuc_April.json',\n        img_prefix='/share/NAS/Benz_Cell/cellLabel-main/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(1020, 768), keep_ratio=True),\n            dict(\n                type='RandomFlip',\n                flip_ratio=0.5,\n                direction=['horizontal', 'vertical']),\n            dict(type='Pad', size_divisor=32),\n            dict(\n                type='Normalize',\n                mean=[25.526, 0.386, 52.85],\n                std=[53.347, 9.402, 53.172],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=['img', 'gt_bboxes', 'gt_labels'],\n                meta_keys=('filename', 'ori_shape', 'img_shape',\n                           'img_norm_cfg', 'pad_shape', 'scale_factor'))\n        ],\n        classes=('object', )),\n    val=dict(\n        type='CocoDataset',\n        ann_file=\n        '/share/NAS/Benz_Cell/cellLabel-main/Coco_File/Cell_TestNuc_April.json',\n        img_prefix='/share/NAS/Benz_Cell/cellLabel-main/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1020, 768),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[25.526, 0.386, 52.85],\n                        std=[53.347, 9.402, 53.172],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('object', )),\n    test=dict(\n        type='CocoDataset',\n        ann_file=\n        '/share/NAS/Benz_Cell/cellLabel-main/Coco_File/Cell_TestNuc_April.json',\n        img_prefix='/share/NAS/Benz_Cell/cellLabel-main/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1020, 768),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[25.526, 0.386, 52.85],\n                        std=[53.347, 9.402, 53.172],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('object', )))\nevaluation = dict(interval=1, metric='bbox', save_best='bbox_mAP')\noptimizer = dict(type='SGD', lr=0.005, momentum=0.9, weight_decay=0.0005)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=30)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = 'pretrained_models/atss_r101_fpn_1x_20200825-dfcadd6f.pth'\nresume_from = None\nworkflow = [('train', 1), ('val', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nauto_scale_lr = dict(enable=False, base_batch_size=16)\nmodel = dict(\n    type='ATSS',\n    backbone=dict(\n        type='ResNet',\n        depth=101,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained',\n                      checkpoint='torchvision://resnet101')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=1,\n        add_extra_convs='on_output',\n        num_outs=5),\n    bbox_head=dict(\n        type='ATSSHead',\n        num_classes=1,\n        in_channels=256,\n        stacked_convs=4,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            ratios=[1.0],\n            octave_base_scale=8,\n            scales_per_octave=1,\n            strides=[8, 16, 32, 64, 128]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[0.1, 0.1, 0.2, 0.2]),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=1.0),\n        loss_bbox=dict(type='GIoULoss', loss_weight=2.0),\n        loss_centerness=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0)),\n    train_cfg=dict(\n        assigner=dict(type='ATSSAssigner', topk=9),\n        allowed_border=-1,\n        pos_weight=-1,\n        debug=False),\n    test_cfg=dict(\n        nms_pre=1000,\n        min_bbox_size=0,\n        score_thr=0.05,\n        nms=dict(type='nms', iou_threshold=0.6),\n        max_per_img=300))\nclasses = ('object', )\nimg_scale = (1020, 768)\nbase = '/share/NAS/Benz_Cell/cellLabel-main/'\ndevice = 'cuda'\nwork_dir = './work_dirs/New_OCT/ATSS_R101_CellNuc'\nauto_resume = False\ngpu_ids = [0]\n", "seed": 534250193, "exp_name": "atss_r101_CellNucNo.py", "hook_msgs": {}}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00099, "memory": 8827, "data_time": 0.02886, "loss_cls": 0.38252, "loss_bbox": 0.28996, "loss_centerness": 0.62896, "loss": 1.30145, "time": 0.60727}
{"mode": "val", "epoch": 1, "iter": 312, "lr": 0.00177, "bbox_mAP": 0.772, "bbox_mAP_50": 0.971, "bbox_mAP_75": 0.926, "bbox_mAP_s": 0.462, "bbox_mAP_m": 0.845, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.772 0.971 0.926 0.462 0.845 -1.000"}
{"mode": "val", "epoch": 1, "iter": 63, "lr": 0.00177, "memory": 8827, "data_time": 0.04236, "loss_cls": 0.06439, "loss_bbox": 0.15927, "loss_centerness": 0.62035, "loss": 0.84401, "time": 0.26289}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.00277, "memory": 8827, "data_time": 0.02964, "loss_cls": 0.05897, "loss_bbox": 0.15051, "loss_centerness": 0.61887, "loss": 0.82835, "time": 0.60114}
{"mode": "val", "epoch": 2, "iter": 312, "lr": 0.00355, "bbox_mAP": 0.79, "bbox_mAP_50": 0.976, "bbox_mAP_75": 0.941, "bbox_mAP_s": 0.577, "bbox_mAP_m": 0.867, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.790 0.976 0.941 0.577 0.867 -1.000"}
{"mode": "val", "epoch": 2, "iter": 63, "lr": 0.00355, "memory": 8827, "data_time": 0.04325, "loss_cls": 0.05391, "loss_bbox": 0.14653, "loss_centerness": 0.61959, "loss": 0.82002, "time": 0.26486}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.00455, "memory": 8827, "data_time": 0.03001, "loss_cls": 0.04903, "loss_bbox": 0.13906, "loss_centerness": 0.61797, "loss": 0.80607, "time": 0.60447}
{"mode": "val", "epoch": 3, "iter": 312, "lr": 0.005, "bbox_mAP": 0.802, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.942, "bbox_mAP_s": 0.543, "bbox_mAP_m": 0.876, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.802 0.968 0.942 0.543 0.876 -1.000"}
{"mode": "val", "epoch": 3, "iter": 63, "lr": 0.005, "memory": 8827, "data_time": 0.06408, "loss_cls": 0.04854, "loss_bbox": 0.13686, "loss_centerness": 0.61916, "loss": 0.80457, "time": 0.28664}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.005, "memory": 8827, "data_time": 0.03017, "loss_cls": 0.04441, "loss_bbox": 0.13087, "loss_centerness": 0.61762, "loss": 0.79289, "time": 0.60629}
{"mode": "val", "epoch": 4, "iter": 312, "lr": 0.005, "bbox_mAP": 0.803, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.943, "bbox_mAP_s": 0.502, "bbox_mAP_m": 0.877, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.803 0.968 0.943 0.502 0.877 -1.000"}
{"mode": "val", "epoch": 4, "iter": 63, "lr": 0.005, "memory": 8827, "data_time": 0.04285, "loss_cls": 0.04671, "loss_bbox": 0.13515, "loss_centerness": 0.61914, "loss": 0.80101, "time": 0.26418}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.005, "memory": 8827, "data_time": 0.03218, "loss_cls": 0.04314, "loss_bbox": 0.12735, "loss_centerness": 0.61772, "loss": 0.78822, "time": 0.60664}
{"mode": "val", "epoch": 5, "iter": 312, "lr": 0.005, "bbox_mAP": 0.804, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.545, "bbox_mAP_m": 0.879, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.804 0.968 0.944 0.545 0.879 -1.000"}
{"mode": "val", "epoch": 5, "iter": 63, "lr": 0.005, "memory": 8827, "data_time": 0.04333, "loss_cls": 0.04604, "loss_bbox": 0.13356, "loss_centerness": 0.61907, "loss": 0.79867, "time": 0.2648}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.005, "memory": 8827, "data_time": 0.03084, "loss_cls": 0.04228, "loss_bbox": 0.12699, "loss_centerness": 0.61765, "loss": 0.78692, "time": 0.60617}
{"mode": "val", "epoch": 6, "iter": 312, "lr": 0.005, "bbox_mAP": 0.808, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.549, "bbox_mAP_m": 0.882, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.808 0.968 0.944 0.549 0.882 -1.000"}
{"mode": "val", "epoch": 6, "iter": 63, "lr": 0.005, "memory": 8827, "data_time": 0.0433, "loss_cls": 0.0449, "loss_bbox": 0.13033, "loss_centerness": 0.61887, "loss": 0.79411, "time": 0.2656}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.005, "memory": 8827, "data_time": 0.03019, "loss_cls": 0.04171, "loss_bbox": 0.12497, "loss_centerness": 0.61774, "loss": 0.78442, "time": 0.60723}
{"mode": "val", "epoch": 7, "iter": 312, "lr": 0.005, "bbox_mAP": 0.808, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.943, "bbox_mAP_s": 0.532, "bbox_mAP_m": 0.881, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.808 0.968 0.943 0.532 0.881 -1.000"}
{"mode": "val", "epoch": 7, "iter": 63, "lr": 0.005, "memory": 8827, "data_time": 0.04297, "loss_cls": 0.04474, "loss_bbox": 0.12929, "loss_centerness": 0.61881, "loss": 0.79284, "time": 0.27193}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 0.005, "memory": 8827, "data_time": 0.03003, "loss_cls": 0.04097, "loss_bbox": 0.12304, "loss_centerness": 0.61757, "loss": 0.78159, "time": 0.6056}
{"mode": "val", "epoch": 8, "iter": 312, "lr": 0.005, "bbox_mAP": 0.807, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.943, "bbox_mAP_s": 0.491, "bbox_mAP_m": 0.88, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.807 0.968 0.943 0.491 0.880 -1.000"}
{"mode": "val", "epoch": 8, "iter": 63, "lr": 0.005, "memory": 8827, "data_time": 0.04264, "loss_cls": 0.04399, "loss_bbox": 0.12893, "loss_centerness": 0.61875, "loss": 0.79167, "time": 0.26402}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 0.0005, "memory": 8827, "data_time": 0.02965, "loss_cls": 0.03952, "loss_bbox": 0.11982, "loss_centerness": 0.61734, "loss": 0.77667, "time": 0.60568}
{"mode": "val", "epoch": 9, "iter": 312, "lr": 0.0005, "bbox_mAP": 0.81, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.484, "bbox_mAP_m": 0.884, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.810 0.968 0.944 0.484 0.884 -1.000"}
{"mode": "val", "epoch": 9, "iter": 63, "lr": 0.0005, "memory": 8827, "data_time": 0.0429, "loss_cls": 0.04326, "loss_bbox": 0.12616, "loss_centerness": 0.61885, "loss": 0.78827, "time": 0.26455}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 0.0005, "memory": 8827, "data_time": 0.03005, "loss_cls": 0.03921, "loss_bbox": 0.11866, "loss_centerness": 0.61733, "loss": 0.7752, "time": 0.6062}
{"mode": "val", "epoch": 10, "iter": 312, "lr": 0.0005, "bbox_mAP": 0.81, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.483, "bbox_mAP_m": 0.884, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.810 0.968 0.944 0.483 0.884 -1.000"}
{"mode": "val", "epoch": 10, "iter": 63, "lr": 0.0005, "memory": 8827, "data_time": 0.04336, "loss_cls": 0.04341, "loss_bbox": 0.12637, "loss_centerness": 0.61882, "loss": 0.7886, "time": 0.2651}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 0.0005, "memory": 8827, "data_time": 0.02996, "loss_cls": 0.03863, "loss_bbox": 0.11866, "loss_centerness": 0.61713, "loss": 0.77442, "time": 0.60665}
{"mode": "val", "epoch": 11, "iter": 312, "lr": 0.0005, "bbox_mAP": 0.809, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.482, "bbox_mAP_m": 0.884, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.809 0.968 0.944 0.482 0.884 -1.000"}
{"mode": "val", "epoch": 11, "iter": 63, "lr": 0.0005, "memory": 8827, "data_time": 0.04363, "loss_cls": 0.04341, "loss_bbox": 0.12677, "loss_centerness": 0.61882, "loss": 0.78899, "time": 0.26603}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 5e-05, "memory": 8827, "data_time": 0.03008, "loss_cls": 0.03873, "loss_bbox": 0.11856, "loss_centerness": 0.6175, "loss": 0.77479, "time": 0.60783}
{"mode": "val", "epoch": 12, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.81, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.486, "bbox_mAP_m": 0.886, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.810 0.968 0.944 0.486 0.886 -1.000"}
{"mode": "val", "epoch": 12, "iter": 63, "lr": 5e-05, "memory": 8827, "data_time": 0.04347, "loss_cls": 0.04319, "loss_bbox": 0.12576, "loss_centerness": 0.61895, "loss": 0.7879, "time": 0.26575}
{"mode": "train", "epoch": 13, "iter": 100, "lr": 5e-05, "memory": 8827, "data_time": 0.03021, "loss_cls": 0.03868, "loss_bbox": 0.11769, "loss_centerness": 0.61702, "loss": 0.77338, "time": 0.60877}
{"mode": "val", "epoch": 13, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.81, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.483, "bbox_mAP_m": 0.885, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.810 0.968 0.944 0.483 0.885 -1.000"}
{"mode": "val", "epoch": 13, "iter": 63, "lr": 5e-05, "memory": 8827, "data_time": 0.04353, "loss_cls": 0.04304, "loss_bbox": 0.12503, "loss_centerness": 0.61865, "loss": 0.78672, "time": 0.26443}
{"mode": "train", "epoch": 14, "iter": 100, "lr": 5e-05, "memory": 8827, "data_time": 0.03043, "loss_cls": 0.03889, "loss_bbox": 0.11756, "loss_centerness": 0.61706, "loss": 0.77351, "time": 0.60903}
{"mode": "val", "epoch": 14, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.81, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.488, "bbox_mAP_m": 0.885, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.810 0.968 0.944 0.488 0.885 -1.000"}
{"mode": "val", "epoch": 14, "iter": 63, "lr": 5e-05, "memory": 8827, "data_time": 0.04337, "loss_cls": 0.04272, "loss_bbox": 0.12568, "loss_centerness": 0.61858, "loss": 0.78699, "time": 0.26471}
{"mode": "train", "epoch": 15, "iter": 100, "lr": 5e-05, "memory": 8827, "data_time": 0.03025, "loss_cls": 0.03957, "loss_bbox": 0.11983, "loss_centerness": 0.61778, "loss": 0.77718, "time": 0.60765}
{"mode": "val", "epoch": 15, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.81, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.482, "bbox_mAP_m": 0.885, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.810 0.968 0.944 0.482 0.885 -1.000"}
{"mode": "val", "epoch": 15, "iter": 63, "lr": 5e-05, "memory": 8827, "data_time": 0.05187, "loss_cls": 0.04342, "loss_bbox": 0.12546, "loss_centerness": 0.61866, "loss": 0.78754, "time": 0.27451}
{"mode": "train", "epoch": 16, "iter": 100, "lr": 5e-05, "memory": 8827, "data_time": 0.03071, "loss_cls": 0.03892, "loss_bbox": 0.11794, "loss_centerness": 0.61729, "loss": 0.77415, "time": 0.6104}
{"mode": "val", "epoch": 16, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.81, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.483, "bbox_mAP_m": 0.885, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.810 0.968 0.944 0.483 0.885 -1.000"}
{"mode": "val", "epoch": 16, "iter": 63, "lr": 5e-05, "memory": 8827, "data_time": 0.04861, "loss_cls": 0.04361, "loss_bbox": 0.12593, "loss_centerness": 0.61876, "loss": 0.78829, "time": 0.27024}
{"mode": "train", "epoch": 17, "iter": 100, "lr": 5e-05, "memory": 8827, "data_time": 0.03075, "loss_cls": 0.0388, "loss_bbox": 0.11784, "loss_centerness": 0.61696, "loss": 0.77359, "time": 0.60774}
{"mode": "val", "epoch": 17, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.81, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.483, "bbox_mAP_m": 0.885, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.810 0.968 0.944 0.483 0.885 -1.000"}
{"mode": "val", "epoch": 17, "iter": 63, "lr": 5e-05, "memory": 8827, "data_time": 0.0432, "loss_cls": 0.04318, "loss_bbox": 0.12584, "loss_centerness": 0.61867, "loss": 0.7877, "time": 0.26437}
{"mode": "train", "epoch": 18, "iter": 100, "lr": 5e-05, "memory": 8827, "data_time": 0.03033, "loss_cls": 0.03847, "loss_bbox": 0.11739, "loss_centerness": 0.61747, "loss": 0.77333, "time": 0.60843}
{"mode": "val", "epoch": 18, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.811, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.483, "bbox_mAP_m": 0.885, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.811 0.968 0.944 0.483 0.885 -1.000"}
{"mode": "val", "epoch": 18, "iter": 63, "lr": 5e-05, "memory": 8827, "data_time": 0.04351, "loss_cls": 0.04311, "loss_bbox": 0.12585, "loss_centerness": 0.61864, "loss": 0.7876, "time": 0.26547}
{"mode": "train", "epoch": 19, "iter": 100, "lr": 5e-05, "memory": 8827, "data_time": 0.03033, "loss_cls": 0.03903, "loss_bbox": 0.11821, "loss_centerness": 0.61761, "loss": 0.77485, "time": 0.60895}
{"mode": "val", "epoch": 19, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.81, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.483, "bbox_mAP_m": 0.885, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.810 0.968 0.944 0.483 0.885 -1.000"}
{"mode": "val", "epoch": 19, "iter": 63, "lr": 5e-05, "memory": 8827, "data_time": 0.04344, "loss_cls": 0.04271, "loss_bbox": 0.12576, "loss_centerness": 0.61851, "loss": 0.78698, "time": 0.26542}
{"mode": "train", "epoch": 20, "iter": 100, "lr": 5e-05, "memory": 8827, "data_time": 0.0299, "loss_cls": 0.03878, "loss_bbox": 0.11777, "loss_centerness": 0.6172, "loss": 0.77374, "time": 0.60682}
{"mode": "val", "epoch": 20, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.81, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.486, "bbox_mAP_m": 0.885, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.810 0.968 0.944 0.486 0.885 -1.000"}
{"mode": "val", "epoch": 20, "iter": 63, "lr": 5e-05, "memory": 8827, "data_time": 0.04382, "loss_cls": 0.04312, "loss_bbox": 0.12588, "loss_centerness": 0.61873, "loss": 0.78773, "time": 0.26515}
{"mode": "train", "epoch": 21, "iter": 100, "lr": 5e-05, "memory": 8827, "data_time": 0.02992, "loss_cls": 0.03863, "loss_bbox": 0.11835, "loss_centerness": 0.61747, "loss": 0.77445, "time": 0.60705}
{"mode": "val", "epoch": 21, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.81, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.486, "bbox_mAP_m": 0.886, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.810 0.968 0.944 0.486 0.886 -1.000"}
{"mode": "val", "epoch": 21, "iter": 63, "lr": 5e-05, "memory": 8827, "data_time": 0.04329, "loss_cls": 0.04366, "loss_bbox": 0.12537, "loss_centerness": 0.61868, "loss": 0.78771, "time": 0.26522}
{"mode": "train", "epoch": 22, "iter": 100, "lr": 5e-05, "memory": 8827, "data_time": 0.02995, "loss_cls": 0.03899, "loss_bbox": 0.11734, "loss_centerness": 0.61726, "loss": 0.7736, "time": 0.60605}
{"mode": "val", "epoch": 22, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.81, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.484, "bbox_mAP_m": 0.885, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.810 0.968 0.944 0.484 0.885 -1.000"}
{"mode": "val", "epoch": 22, "iter": 63, "lr": 5e-05, "memory": 8827, "data_time": 0.0432, "loss_cls": 0.04317, "loss_bbox": 0.12526, "loss_centerness": 0.61864, "loss": 0.78708, "time": 0.26556}
{"mode": "train", "epoch": 23, "iter": 100, "lr": 5e-05, "memory": 8827, "data_time": 0.03032, "loss_cls": 0.03827, "loss_bbox": 0.11722, "loss_centerness": 0.617, "loss": 0.77248, "time": 0.60718}
{"mode": "val", "epoch": 23, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.811, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.486, "bbox_mAP_m": 0.886, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.811 0.968 0.944 0.486 0.886 -1.000"}
{"mode": "val", "epoch": 23, "iter": 63, "lr": 5e-05, "memory": 8827, "data_time": 0.04344, "loss_cls": 0.04281, "loss_bbox": 0.12539, "loss_centerness": 0.61872, "loss": 0.78691, "time": 0.26574}
{"mode": "train", "epoch": 24, "iter": 100, "lr": 5e-05, "memory": 8827, "data_time": 0.03014, "loss_cls": 0.03882, "loss_bbox": 0.1179, "loss_centerness": 0.61723, "loss": 0.77396, "time": 0.60745}
{"mode": "val", "epoch": 24, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.81, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.484, "bbox_mAP_m": 0.884, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.810 0.968 0.944 0.484 0.884 -1.000"}
{"mode": "val", "epoch": 24, "iter": 63, "lr": 5e-05, "memory": 8827, "data_time": 0.05965, "loss_cls": 0.04348, "loss_bbox": 0.12597, "loss_centerness": 0.61855, "loss": 0.788, "time": 0.28147}
{"mode": "train", "epoch": 25, "iter": 100, "lr": 5e-05, "memory": 8827, "data_time": 0.03006, "loss_cls": 0.03892, "loss_bbox": 0.11736, "loss_centerness": 0.61718, "loss": 0.77346, "time": 0.60733}
{"mode": "val", "epoch": 25, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.81, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.489, "bbox_mAP_m": 0.884, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.810 0.968 0.944 0.489 0.884 -1.000"}
{"mode": "val", "epoch": 25, "iter": 63, "lr": 5e-05, "memory": 8827, "data_time": 0.04324, "loss_cls": 0.04328, "loss_bbox": 0.12537, "loss_centerness": 0.61875, "loss": 0.7874, "time": 0.26437}
{"mode": "train", "epoch": 26, "iter": 100, "lr": 5e-05, "memory": 8827, "data_time": 0.0303, "loss_cls": 0.03831, "loss_bbox": 0.11581, "loss_centerness": 0.61737, "loss": 0.7715, "time": 0.61276}
{"mode": "val", "epoch": 26, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.81, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.489, "bbox_mAP_m": 0.884, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.810 0.968 0.944 0.489 0.884 -1.000"}
{"mode": "val", "epoch": 26, "iter": 63, "lr": 5e-05, "memory": 8827, "data_time": 0.04375, "loss_cls": 0.04328, "loss_bbox": 0.12581, "loss_centerness": 0.6188, "loss": 0.78788, "time": 0.2659}
{"mode": "train", "epoch": 27, "iter": 100, "lr": 5e-05, "memory": 8827, "data_time": 0.03101, "loss_cls": 0.03843, "loss_bbox": 0.11733, "loss_centerness": 0.61713, "loss": 0.77288, "time": 0.61112}
{"mode": "val", "epoch": 27, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.81, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.486, "bbox_mAP_m": 0.884, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.810 0.968 0.944 0.486 0.884 -1.000"}
{"mode": "val", "epoch": 27, "iter": 63, "lr": 5e-05, "memory": 8827, "data_time": 0.05944, "loss_cls": 0.04272, "loss_bbox": 0.12545, "loss_centerness": 0.61863, "loss": 0.78681, "time": 0.28267}
{"mode": "train", "epoch": 28, "iter": 100, "lr": 5e-05, "memory": 8827, "data_time": 0.03058, "loss_cls": 0.03825, "loss_bbox": 0.11681, "loss_centerness": 0.61707, "loss": 0.77213, "time": 0.61049}
{"mode": "val", "epoch": 28, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.81, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.486, "bbox_mAP_m": 0.884, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.810 0.968 0.944 0.486 0.884 -1.000"}
{"mode": "val", "epoch": 28, "iter": 63, "lr": 5e-05, "memory": 8827, "data_time": 0.04357, "loss_cls": 0.04334, "loss_bbox": 0.12596, "loss_centerness": 0.61878, "loss": 0.78807, "time": 0.26593}
{"mode": "train", "epoch": 29, "iter": 100, "lr": 5e-05, "memory": 8827, "data_time": 0.03087, "loss_cls": 0.03889, "loss_bbox": 0.11878, "loss_centerness": 0.6176, "loss": 0.77528, "time": 0.61}
{"mode": "val", "epoch": 29, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.81, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.486, "bbox_mAP_m": 0.884, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.810 0.968 0.944 0.486 0.884 -1.000"}
{"mode": "val", "epoch": 29, "iter": 63, "lr": 5e-05, "memory": 8827, "data_time": 0.04675, "loss_cls": 0.04348, "loss_bbox": 0.12653, "loss_centerness": 0.61865, "loss": 0.78867, "time": 0.27132}
{"mode": "train", "epoch": 30, "iter": 100, "lr": 5e-05, "memory": 8827, "data_time": 0.03078, "loss_cls": 0.03886, "loss_bbox": 0.11821, "loss_centerness": 0.61714, "loss": 0.77421, "time": 0.61001}
{"mode": "val", "epoch": 30, "iter": 312, "lr": 5e-05, "bbox_mAP": 0.81, "bbox_mAP_50": 0.968, "bbox_mAP_75": 0.944, "bbox_mAP_s": 0.489, "bbox_mAP_m": 0.884, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.810 0.968 0.944 0.489 0.884 -1.000"}
{"mode": "val", "epoch": 30, "iter": 63, "lr": 5e-05, "memory": 8827, "data_time": 0.04384, "loss_cls": 0.04313, "loss_bbox": 0.12526, "loss_centerness": 0.6186, "loss": 0.78699, "time": 0.26578}
