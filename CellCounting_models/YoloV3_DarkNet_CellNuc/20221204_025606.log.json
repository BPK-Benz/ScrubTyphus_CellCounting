{"env_info": "sys.platform: linux\nPython: 3.9.15 (main, Nov 24 2022, 14:31:59) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA RTX A4000\nCUDA_HOME: /opt/anaconda3\nNVCC: Cuda compilation tools, release 11.7, V11.7.99\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\nPyTorch: 1.13.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 9.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.7\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.5\n  - Magma 2.6.1\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.14.0\nOpenCV: 4.6.0\nMMCV: 1.7.0\nMMCV Compiler: GCC 9.3\nMMCV CUDA Compiler: 11.7\nMMDetection: 2.26.0+31c8495", "config": "checkpoint_config = dict(interval=1)\nlog_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = 'pretrained_models/yolov3_d53_mstrain-416_273e_coco-2b60fcd9.pth'\nresume_from = None\nworkflow = [('train', 1), ('val', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nauto_scale_lr = dict(enable=False, base_batch_size=64)\nmodel = dict(\n    type='YOLOV3',\n    backbone=dict(\n        type='Darknet',\n        depth=53,\n        out_indices=(3, 4, 5),\n        init_cfg=dict(type='Pretrained', checkpoint='open-mmlab://darknet53')),\n    neck=dict(\n        type='YOLOV3Neck',\n        num_scales=3,\n        in_channels=[1024, 512, 256],\n        out_channels=[512, 256, 128]),\n    bbox_head=dict(\n        type='YOLOV3Head',\n        num_classes=1,\n        in_channels=[512, 256, 128],\n        out_channels=[1024, 512, 256],\n        anchor_generator=dict(\n            type='YOLOAnchorGenerator',\n            base_sizes=[[(116, 90), (156, 198), (373, 326)],\n                        [(30, 61), (62, 45), (59, 119)],\n                        [(10, 13), (16, 30), (33, 23)]],\n            strides=[32, 16, 8]),\n        bbox_coder=dict(type='YOLOBBoxCoder'),\n        featmap_strides=[32, 16, 8],\n        loss_cls=dict(\n            type='CrossEntropyLoss',\n            use_sigmoid=True,\n            loss_weight=1.0,\n            reduction='sum'),\n        loss_conf=dict(\n            type='CrossEntropyLoss',\n            use_sigmoid=True,\n            loss_weight=1.0,\n            reduction='sum'),\n        loss_xy=dict(\n            type='CrossEntropyLoss',\n            use_sigmoid=True,\n            loss_weight=2.0,\n            reduction='sum'),\n        loss_wh=dict(type='MSELoss', loss_weight=2.0, reduction='sum')),\n    train_cfg=dict(\n        assigner=dict(\n            type='GridAssigner',\n            pos_iou_thr=0.5,\n            neg_iou_thr=0.5,\n            min_pos_iou=0)),\n    test_cfg=dict(\n        nms_pre=1000,\n        min_bbox_size=0,\n        score_thr=0.05,\n        conf_thr=0.005,\n        nms=dict(type='nms', iou_threshold=0.45),\n        max_per_img=300))\ndataset_type = 'CocoDataset'\ndata_root = 'data/coco/'\nimg_norm_cfg = dict(\n    mean=[25.526, 0.386, 52.85], std=[53.347, 9.402, 53.172], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MinIoURandomCrop',\n        min_ious=(0.4, 0.5, 0.6, 0.7, 0.8, 0.9),\n        min_crop_size=0.3),\n    dict(type='Resize', img_scale=[(320, 320), (416, 416)], keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[25.526, 0.386, 52.85],\n        std=[53.347, 9.402, 53.172],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(416, 416),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[25.526, 0.386, 52.85],\n                std=[53.347, 9.402, 53.172],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=5,\n    workers_per_gpu=1,\n    train=dict(\n        type='CocoDataset',\n        ann_file=\n        '/share/NAS/Benz_Cell/cellLabel-main/Coco_File/Cell_TrainNuc_April.json',\n        img_prefix='/share/NAS/Benz_Cell/cellLabel-main/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(\n                type='MinIoURandomCrop',\n                min_ious=(0.4, 0.5, 0.6, 0.7, 0.8, 0.9),\n                min_crop_size=0.3),\n            dict(\n                type='Resize',\n                img_scale=[(320, 320), (416, 416)],\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[25.526, 0.386, 52.85],\n                std=[53.347, 9.402, 53.172],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ],\n        classes=('object', )),\n    val=dict(\n        type='CocoDataset',\n        ann_file=\n        '/share/NAS/Benz_Cell/cellLabel-main/Coco_File/Cell_TestNuc_April.json',\n        img_prefix='/share/NAS/Benz_Cell/cellLabel-main/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(416, 416),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.5),\n                    dict(\n                        type='Normalize',\n                        mean=[25.526, 0.386, 52.85],\n                        std=[53.347, 9.402, 53.172],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('object', )),\n    test=dict(\n        type='CocoDataset',\n        ann_file=\n        '/share/NAS/Benz_Cell/cellLabel-main/Coco_File/Cell_TestNuc_April.json',\n        img_prefix='/share/NAS/Benz_Cell/cellLabel-main/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(416, 416),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip', flip_ratio=0.5),\n                    dict(\n                        type='Normalize',\n                        mean=[25.526, 0.386, 52.85],\n                        std=[53.347, 9.402, 53.172],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        classes=('object', )))\noptimizer = dict(type='SGD', lr=0.001, momentum=0.8, weight_decay=0.0005)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=2000,\n    warmup_ratio=0.1,\n    step=[218, 246])\nrunner = dict(type='EpochBasedRunner', max_epochs=30)\nevaluation = dict(interval=1, metric='bbox', save_best='bbox_mAP')\nclasses = ('object', )\nimg_scale = (1020, 768)\nbase = '/share/NAS/Benz_Cell/cellLabel-main/'\ndevice = 'cuda'\nwork_dir = './work_dirs/New_OCT/YoloV3_DarkNet_CellNuc'\nauto_resume = False\ngpu_ids = [0]\n", "seed": 1827779749, "exp_name": "yolov3_d53_416_CellNucNo.py", "hook_msgs": {}}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00014, "memory": 2583, "data_time": 0.02659, "loss_cls": 577.27387, "loss_conf": 1361.88304, "loss_xy": 882.74611, "loss_wh": 56.55506, "loss": 2878.45809, "grad_norm": 3933.29281, "time": 0.16929}
{"mode": "val", "epoch": 1, "iter": 312, "lr": 0.00018, "bbox_mAP": 0.467, "bbox_mAP_50": 0.936, "bbox_mAP_75": 0.515, "bbox_mAP_s": 0.041, "bbox_mAP_m": 0.507, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.467 0.936 0.515 0.041 0.507 -1.000"}
{"mode": "val", "epoch": 1, "iter": 63, "lr": 0.00018, "memory": 2583, "data_time": 0.09879, "loss_cls": 22.85986, "loss_conf": 582.71797, "loss_xy": 772.51766, "loss_wh": 25.51348, "loss": 1403.60897, "time": 0.15959}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.00022, "memory": 2586, "data_time": 0.02845, "loss_cls": 19.18775, "loss_conf": 547.19146, "loss_xy": 728.32021, "loss_wh": 21.42132, "loss": 1316.12073, "grad_norm": 3268.31847, "time": 0.15915}
{"mode": "val", "epoch": 2, "iter": 312, "lr": 0.00026, "bbox_mAP": 0.569, "bbox_mAP_50": 0.964, "bbox_mAP_75": 0.756, "bbox_mAP_s": 0.239, "bbox_mAP_m": 0.623, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.569 0.964 0.756 0.239 0.623 -1.000"}
{"mode": "val", "epoch": 2, "iter": 63, "lr": 0.00026, "memory": 2586, "data_time": 0.10089, "loss_cls": 5.21898, "loss_conf": 389.34436, "loss_xy": 747.67001, "loss_wh": 15.96068, "loss": 1158.19404, "time": 0.16244}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.0003, "memory": 2586, "data_time": 0.02785, "loss_cls": 5.01382, "loss_conf": 337.07781, "loss_xy": 661.93415, "loss_wh": 14.01782, "loss": 1018.0436, "grad_norm": 2661.7466, "time": 0.15595}
{"mode": "val", "epoch": 3, "iter": 312, "lr": 0.00034, "bbox_mAP": 0.608, "bbox_mAP_50": 0.978, "bbox_mAP_75": 0.83, "bbox_mAP_s": 0.413, "bbox_mAP_m": 0.669, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.608 0.978 0.830 0.413 0.669 -1.000"}
{"mode": "val", "epoch": 3, "iter": 63, "lr": 0.00034, "memory": 2586, "data_time": 0.10204, "loss_cls": 4.42922, "loss_conf": 323.75844, "loss_xy": 729.86756, "loss_wh": 10.99248, "loss": 1069.04771, "time": 0.16408}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.00038, "memory": 2586, "data_time": 0.02822, "loss_cls": 3.85549, "loss_conf": 316.53924, "loss_xy": 697.31884, "loss_wh": 13.70477, "loss": 1031.41833, "grad_norm": 2697.57594, "time": 0.16041}
{"mode": "val", "epoch": 4, "iter": 312, "lr": 0.00042, "bbox_mAP": 0.449, "bbox_mAP_50": 0.975, "bbox_mAP_75": 0.403, "bbox_mAP_s": 0.515, "bbox_mAP_m": 0.518, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.449 0.975 0.403 0.515 0.518 -1.000"}
{"mode": "val", "epoch": 4, "iter": 63, "lr": 0.00042, "memory": 2586, "data_time": 0.10389, "loss_cls": 2.77612, "loss_conf": 276.39776, "loss_xy": 687.85985, "loss_wh": 24.83706, "loss": 991.87079, "time": 0.16491}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.00046, "memory": 2586, "data_time": 0.02811, "loss_cls": 2.41482, "loss_conf": 254.07499, "loss_xy": 651.47873, "loss_wh": 13.94942, "loss": 921.91795, "grad_norm": 2644.11263, "time": 0.15708}
{"mode": "val", "epoch": 5, "iter": 312, "lr": 0.0005, "bbox_mAP": 0.628, "bbox_mAP_50": 0.979, "bbox_mAP_75": 0.848, "bbox_mAP_s": 0.502, "bbox_mAP_m": 0.693, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.628 0.979 0.848 0.502 0.693 -1.000"}
{"mode": "val", "epoch": 5, "iter": 63, "lr": 0.0005, "memory": 2586, "data_time": 0.10536, "loss_cls": 2.67723, "loss_conf": 270.68614, "loss_xy": 714.33387, "loss_wh": 11.7001, "loss": 999.39734, "time": 0.1662}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.00055, "memory": 2586, "data_time": 0.02763, "loss_cls": 1.75821, "loss_conf": 249.8123, "loss_xy": 690.7709, "loss_wh": 13.97702, "loss": 956.31843, "grad_norm": 2578.97589, "time": 0.15724}
{"mode": "val", "epoch": 6, "iter": 312, "lr": 0.00058, "bbox_mAP": 0.566, "bbox_mAP_50": 0.981, "bbox_mAP_75": 0.842, "bbox_mAP_s": 0.517, "bbox_mAP_m": 0.632, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.566 0.981 0.842 0.517 0.632 -1.000"}
{"mode": "val", "epoch": 6, "iter": 63, "lr": 0.00058, "memory": 2586, "data_time": 0.10078, "loss_cls": 1.44087, "loss_conf": 247.24724, "loss_xy": 699.28335, "loss_wh": 13.78864, "loss": 961.76011, "time": 0.1608}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.00063, "memory": 2586, "data_time": 0.02759, "loss_cls": 1.36035, "loss_conf": 221.35662, "loss_xy": 650.7834, "loss_wh": 15.48969, "loss": 888.99006, "grad_norm": 2498.94766, "time": 0.15642}
{"mode": "val", "epoch": 7, "iter": 312, "lr": 0.00066, "bbox_mAP": 0.635, "bbox_mAP_50": 0.982, "bbox_mAP_75": 0.897, "bbox_mAP_s": 0.568, "bbox_mAP_m": 0.705, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.635 0.982 0.897 0.568 0.705 -1.000"}
{"mode": "val", "epoch": 7, "iter": 63, "lr": 0.00066, "memory": 2586, "data_time": 0.10424, "loss_cls": 2.20607, "loss_conf": 260.47816, "loss_xy": 703.80641, "loss_wh": 9.00353, "loss": 975.49418, "time": 0.16795}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 0.00071, "memory": 2586, "data_time": 0.02851, "loss_cls": 1.16065, "loss_conf": 224.44354, "loss_xy": 664.8681, "loss_wh": 19.14231, "loss": 909.61462, "grad_norm": 2666.98508, "time": 0.15908}
{"mode": "val", "epoch": 8, "iter": 312, "lr": 0.00074, "bbox_mAP": 0.7, "bbox_mAP_50": 0.983, "bbox_mAP_75": 0.916, "bbox_mAP_s": 0.572, "bbox_mAP_m": 0.773, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.700 0.983 0.916 0.572 0.773 -1.000"}
{"mode": "val", "epoch": 8, "iter": 63, "lr": 0.00074, "memory": 2586, "data_time": 0.10657, "loss_cls": 1.37674, "loss_conf": 237.35852, "loss_xy": 719.33946, "loss_wh": 6.54213, "loss": 964.61686, "time": 0.16697}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 0.00079, "memory": 2586, "data_time": 0.02895, "loss_cls": 1.04524, "loss_conf": 221.94248, "loss_xy": 675.9101, "loss_wh": 15.07084, "loss": 913.96866, "grad_norm": 2282.06667, "time": 0.16017}
{"mode": "val", "epoch": 9, "iter": 312, "lr": 0.00082, "bbox_mAP": 0.648, "bbox_mAP_50": 0.983, "bbox_mAP_75": 0.913, "bbox_mAP_s": 0.529, "bbox_mAP_m": 0.721, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.648 0.983 0.913 0.529 0.721 -1.000"}
{"mode": "val", "epoch": 9, "iter": 63, "lr": 0.00082, "memory": 2586, "data_time": 0.10088, "loss_cls": 1.29162, "loss_conf": 223.44505, "loss_xy": 694.23739, "loss_wh": 14.17754, "loss": 933.1516, "time": 0.16307}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 0.00087, "memory": 2586, "data_time": 0.02858, "loss_cls": 1.23134, "loss_conf": 205.31779, "loss_xy": 652.26633, "loss_wh": 19.39464, "loss": 878.2101, "grad_norm": 2310.43148, "time": 0.15945}
{"mode": "val", "epoch": 10, "iter": 312, "lr": 0.0009, "bbox_mAP": 0.631, "bbox_mAP_50": 0.983, "bbox_mAP_75": 0.902, "bbox_mAP_s": 0.581, "bbox_mAP_m": 0.701, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.631 0.983 0.902 0.581 0.701 -1.000"}
{"mode": "val", "epoch": 10, "iter": 63, "lr": 0.0009, "memory": 2586, "data_time": 0.10392, "loss_cls": 1.86169, "loss_conf": 226.63209, "loss_xy": 697.68892, "loss_wh": 11.30082, "loss": 937.48351, "time": 0.16343}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 0.00095, "memory": 2586, "data_time": 0.02823, "loss_cls": 1.14127, "loss_conf": 197.85267, "loss_xy": 649.47181, "loss_wh": 17.69373, "loss": 866.15948, "grad_norm": 2061.19993, "time": 0.15831}
{"mode": "val", "epoch": 11, "iter": 312, "lr": 0.00098, "bbox_mAP": 0.668, "bbox_mAP_50": 0.984, "bbox_mAP_75": 0.904, "bbox_mAP_s": 0.562, "bbox_mAP_m": 0.74, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.668 0.984 0.904 0.562 0.740 -1.000"}
{"mode": "val", "epoch": 11, "iter": 63, "lr": 0.00098, "memory": 2586, "data_time": 0.12867, "loss_cls": 1.55246, "loss_conf": 230.37735, "loss_xy": 672.9779, "loss_wh": 8.89553, "loss": 913.80324, "time": 0.18827}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.001, "memory": 2586, "data_time": 0.02775, "loss_cls": 0.92794, "loss_conf": 207.48638, "loss_xy": 687.99609, "loss_wh": 15.44221, "loss": 911.85261, "grad_norm": 1953.72953, "time": 0.15787}
{"mode": "val", "epoch": 12, "iter": 312, "lr": 0.001, "bbox_mAP": 0.498, "bbox_mAP_50": 0.983, "bbox_mAP_75": 0.524, "bbox_mAP_s": 0.553, "bbox_mAP_m": 0.557, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.498 0.983 0.524 0.553 0.557 -1.000"}
{"mode": "val", "epoch": 12, "iter": 63, "lr": 0.001, "memory": 2586, "data_time": 0.1019, "loss_cls": 1.18575, "loss_conf": 226.16438, "loss_xy": 716.96432, "loss_wh": 25.05438, "loss": 969.36882, "time": 0.1628}
{"mode": "train", "epoch": 13, "iter": 100, "lr": 0.001, "memory": 2586, "data_time": 0.02852, "loss_cls": 1.01223, "loss_conf": 189.38981, "loss_xy": 649.22436, "loss_wh": 16.4728, "loss": 856.0992, "grad_norm": 1892.48059, "time": 0.15764}
{"mode": "val", "epoch": 13, "iter": 312, "lr": 0.001, "bbox_mAP": 0.703, "bbox_mAP_50": 0.984, "bbox_mAP_75": 0.916, "bbox_mAP_s": 0.499, "bbox_mAP_m": 0.775, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.703 0.984 0.916 0.499 0.775 -1.000"}
{"mode": "val", "epoch": 13, "iter": 63, "lr": 0.001, "memory": 2586, "data_time": 0.10291, "loss_cls": 1.35743, "loss_conf": 213.75539, "loss_xy": 667.68803, "loss_wh": 15.38493, "loss": 898.18577, "time": 0.16342}
{"mode": "train", "epoch": 14, "iter": 100, "lr": 0.001, "memory": 2586, "data_time": 0.02763, "loss_cls": 0.93426, "loss_conf": 195.53154, "loss_xy": 682.12574, "loss_wh": 14.10847, "loss": 892.70001, "grad_norm": 1674.8705, "time": 0.15911}
{"mode": "val", "epoch": 14, "iter": 312, "lr": 0.001, "bbox_mAP": 0.709, "bbox_mAP_50": 0.983, "bbox_mAP_75": 0.917, "bbox_mAP_s": 0.612, "bbox_mAP_m": 0.784, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.709 0.983 0.917 0.612 0.784 -1.000"}
{"mode": "val", "epoch": 14, "iter": 63, "lr": 0.001, "memory": 2591, "data_time": 0.1017, "loss_cls": 1.40739, "loss_conf": 214.86054, "loss_xy": 696.7173, "loss_wh": 6.97412, "loss": 919.95935, "time": 0.16342}
{"mode": "train", "epoch": 15, "iter": 100, "lr": 0.001, "memory": 2591, "data_time": 0.02795, "loss_cls": 0.70736, "loss_conf": 193.53209, "loss_xy": 670.8002, "loss_wh": 12.20592, "loss": 877.24557, "grad_norm": 1568.198, "time": 0.15928}
{"mode": "val", "epoch": 15, "iter": 312, "lr": 0.001, "bbox_mAP": 0.638, "bbox_mAP_50": 0.983, "bbox_mAP_75": 0.908, "bbox_mAP_s": 0.61, "bbox_mAP_m": 0.709, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.638 0.983 0.908 0.610 0.709 -1.000"}
{"mode": "val", "epoch": 15, "iter": 63, "lr": 0.001, "memory": 2591, "data_time": 0.10509, "loss_cls": 1.18629, "loss_conf": 213.05632, "loss_xy": 682.37191, "loss_wh": 9.70104, "loss": 906.31556, "time": 0.16521}
{"mode": "train", "epoch": 16, "iter": 100, "lr": 0.001, "memory": 2591, "data_time": 0.02811, "loss_cls": 0.74604, "loss_conf": 190.51008, "loss_xy": 667.05026, "loss_wh": 10.42331, "loss": 868.72969, "grad_norm": 1457.65342, "time": 0.15807}
{"mode": "val", "epoch": 16, "iter": 312, "lr": 0.001, "bbox_mAP": 0.522, "bbox_mAP_50": 0.983, "bbox_mAP_75": 0.672, "bbox_mAP_s": 0.45, "bbox_mAP_m": 0.58, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.522 0.983 0.672 0.450 0.580 -1.000"}
{"mode": "val", "epoch": 16, "iter": 63, "lr": 0.001, "memory": 2591, "data_time": 0.10343, "loss_cls": 1.07018, "loss_conf": 205.14593, "loss_xy": 702.66749, "loss_wh": 23.67226, "loss": 932.55586, "time": 0.16421}
{"mode": "train", "epoch": 17, "iter": 100, "lr": 0.001, "memory": 2591, "data_time": 0.02816, "loss_cls": 0.66766, "loss_conf": 175.40341, "loss_xy": 645.72285, "loss_wh": 10.49075, "loss": 832.28465, "grad_norm": 1380.33694, "time": 0.15918}
{"mode": "val", "epoch": 17, "iter": 312, "lr": 0.001, "bbox_mAP": 0.574, "bbox_mAP_50": 0.983, "bbox_mAP_75": 0.772, "bbox_mAP_s": 0.626, "bbox_mAP_m": 0.642, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.574 0.983 0.772 0.626 0.642 -1.000"}
{"mode": "val", "epoch": 17, "iter": 63, "lr": 0.001, "memory": 2591, "data_time": 0.09787, "loss_cls": 0.74676, "loss_conf": 200.64619, "loss_xy": 709.16544, "loss_wh": 13.73363, "loss": 924.29202, "time": 0.16075}
{"mode": "train", "epoch": 18, "iter": 100, "lr": 0.001, "memory": 2591, "data_time": 0.04219, "loss_cls": 0.54022, "loss_conf": 180.58967, "loss_xy": 658.31569, "loss_wh": 9.01527, "loss": 848.46085, "grad_norm": 1315.81485, "time": 0.17206}
{"mode": "val", "epoch": 18, "iter": 312, "lr": 0.001, "bbox_mAP": 0.684, "bbox_mAP_50": 0.984, "bbox_mAP_75": 0.927, "bbox_mAP_s": 0.582, "bbox_mAP_m": 0.757, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.684 0.984 0.927 0.582 0.757 -1.000"}
{"mode": "val", "epoch": 18, "iter": 63, "lr": 0.001, "memory": 2591, "data_time": 0.0992, "loss_cls": 0.71967, "loss_conf": 199.02631, "loss_xy": 688.04093, "loss_wh": 9.31558, "loss": 897.10249, "time": 0.15945}
{"mode": "train", "epoch": 19, "iter": 100, "lr": 0.001, "memory": 2591, "data_time": 0.02774, "loss_cls": 0.44424, "loss_conf": 182.69645, "loss_xy": 663.93452, "loss_wh": 7.94115, "loss": 855.01637, "grad_norm": 1255.75886, "time": 0.1569}
{"mode": "val", "epoch": 19, "iter": 312, "lr": 0.001, "bbox_mAP": 0.664, "bbox_mAP_50": 0.985, "bbox_mAP_75": 0.927, "bbox_mAP_s": 0.665, "bbox_mAP_m": 0.736, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.664 0.985 0.927 0.665 0.736 -1.000"}
{"mode": "val", "epoch": 19, "iter": 63, "lr": 0.001, "memory": 2591, "data_time": 0.10192, "loss_cls": 0.64237, "loss_conf": 193.83619, "loss_xy": 681.07001, "loss_wh": 8.50073, "loss": 884.04931, "time": 0.16249}
{"mode": "train", "epoch": 20, "iter": 100, "lr": 0.001, "memory": 2591, "data_time": 0.02825, "loss_cls": 0.46663, "loss_conf": 179.52131, "loss_xy": 680.76097, "loss_wh": 8.1915, "loss": 868.94041, "grad_norm": 1202.8167, "time": 0.15805}
{"mode": "val", "epoch": 20, "iter": 312, "lr": 0.001, "bbox_mAP": 0.688, "bbox_mAP_50": 0.985, "bbox_mAP_75": 0.929, "bbox_mAP_s": 0.53, "bbox_mAP_m": 0.761, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.688 0.985 0.929 0.530 0.761 -1.000"}
{"mode": "val", "epoch": 20, "iter": 63, "lr": 0.001, "memory": 2591, "data_time": 0.10138, "loss_cls": 0.47487, "loss_conf": 203.50944, "loss_xy": 688.25644, "loss_wh": 7.35886, "loss": 899.59961, "time": 0.16352}
{"mode": "train", "epoch": 21, "iter": 100, "lr": 0.001, "memory": 2591, "data_time": 0.02923, "loss_cls": 0.41845, "loss_conf": 181.13336, "loss_xy": 667.07926, "loss_wh": 8.00479, "loss": 856.63586, "grad_norm": 1187.64819, "time": 0.15865}
{"mode": "val", "epoch": 21, "iter": 312, "lr": 0.001, "bbox_mAP": 0.734, "bbox_mAP_50": 0.985, "bbox_mAP_75": 0.939, "bbox_mAP_s": 0.604, "bbox_mAP_m": 0.813, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.734 0.985 0.939 0.604 0.813 -1.000"}
{"mode": "val", "epoch": 21, "iter": 63, "lr": 0.001, "memory": 2591, "data_time": 0.10488, "loss_cls": 0.68826, "loss_conf": 204.30735, "loss_xy": 701.7506, "loss_wh": 5.26379, "loss": 912.01001, "time": 0.16574}
{"mode": "train", "epoch": 22, "iter": 100, "lr": 0.001, "memory": 2591, "data_time": 0.02799, "loss_cls": 0.37538, "loss_conf": 178.64889, "loss_xy": 695.6245, "loss_wh": 8.03554, "loss": 882.6843, "grad_norm": 1198.64398, "time": 0.15843}
{"mode": "val", "epoch": 22, "iter": 312, "lr": 0.001, "bbox_mAP": 0.728, "bbox_mAP_50": 0.985, "bbox_mAP_75": 0.939, "bbox_mAP_s": 0.569, "bbox_mAP_m": 0.806, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.728 0.985 0.939 0.569 0.806 -1.000"}
{"mode": "val", "epoch": 22, "iter": 63, "lr": 0.001, "memory": 2591, "data_time": 0.10251, "loss_cls": 0.66587, "loss_conf": 198.81636, "loss_xy": 686.75134, "loss_wh": 5.93017, "loss": 892.16373, "time": 0.16377}
{"mode": "train", "epoch": 23, "iter": 100, "lr": 0.001, "memory": 2591, "data_time": 0.02809, "loss_cls": 0.41295, "loss_conf": 171.44602, "loss_xy": 664.54366, "loss_wh": 8.06573, "loss": 844.46835, "grad_norm": 1146.89272, "time": 0.1592}
{"mode": "val", "epoch": 23, "iter": 312, "lr": 0.001, "bbox_mAP": 0.71, "bbox_mAP_50": 0.985, "bbox_mAP_75": 0.939, "bbox_mAP_s": 0.64, "bbox_mAP_m": 0.786, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.710 0.985 0.939 0.640 0.786 -1.000"}
{"mode": "val", "epoch": 23, "iter": 63, "lr": 0.001, "memory": 2591, "data_time": 0.10741, "loss_cls": 0.66347, "loss_conf": 188.0293, "loss_xy": 675.15587, "loss_wh": 5.39429, "loss": 869.24292, "time": 0.16873}
{"mode": "train", "epoch": 24, "iter": 100, "lr": 0.001, "memory": 2591, "data_time": 0.03016, "loss_cls": 0.37199, "loss_conf": 176.11353, "loss_xy": 664.59522, "loss_wh": 6.76635, "loss": 847.84709, "grad_norm": 1106.59265, "time": 0.16268}
{"mode": "val", "epoch": 24, "iter": 312, "lr": 0.001, "bbox_mAP": 0.703, "bbox_mAP_50": 0.984, "bbox_mAP_75": 0.929, "bbox_mAP_s": 0.624, "bbox_mAP_m": 0.779, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.703 0.984 0.929 0.624 0.779 -1.000"}
{"mode": "val", "epoch": 24, "iter": 63, "lr": 0.001, "memory": 2591, "data_time": 0.10085, "loss_cls": 0.41332, "loss_conf": 208.43609, "loss_xy": 730.31316, "loss_wh": 6.2257, "loss": 945.38826, "time": 0.162}
{"mode": "train", "epoch": 25, "iter": 100, "lr": 0.001, "memory": 2591, "data_time": 0.02813, "loss_cls": 0.27304, "loss_conf": 177.28934, "loss_xy": 668.88726, "loss_wh": 5.50966, "loss": 851.9593, "grad_norm": 1020.30316, "time": 0.15728}
{"mode": "val", "epoch": 25, "iter": 312, "lr": 0.001, "bbox_mAP": 0.712, "bbox_mAP_50": 0.985, "bbox_mAP_75": 0.939, "bbox_mAP_s": 0.651, "bbox_mAP_m": 0.79, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.712 0.985 0.939 0.651 0.790 -1.000"}
{"mode": "val", "epoch": 25, "iter": 63, "lr": 0.001, "memory": 2591, "data_time": 0.10223, "loss_cls": 0.61217, "loss_conf": 196.10364, "loss_xy": 697.05617, "loss_wh": 5.43732, "loss": 899.2093, "time": 0.16371}
{"mode": "train", "epoch": 26, "iter": 100, "lr": 0.001, "memory": 2591, "data_time": 0.02817, "loss_cls": 0.40145, "loss_conf": 180.67413, "loss_xy": 677.36204, "loss_wh": 5.7123, "loss": 864.14992, "grad_norm": 1025.77622, "time": 0.15897}
{"mode": "val", "epoch": 26, "iter": 312, "lr": 0.001, "bbox_mAP": 0.728, "bbox_mAP_50": 0.985, "bbox_mAP_75": 0.941, "bbox_mAP_s": 0.653, "bbox_mAP_m": 0.808, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.728 0.985 0.941 0.653 0.808 -1.000"}
{"mode": "val", "epoch": 26, "iter": 63, "lr": 0.001, "memory": 2591, "data_time": 0.10087, "loss_cls": 0.4493, "loss_conf": 198.6707, "loss_xy": 697.47896, "loss_wh": 5.45069, "loss": 902.04965, "time": 0.16144}
{"mode": "train", "epoch": 27, "iter": 100, "lr": 0.001, "memory": 2591, "data_time": 0.02835, "loss_cls": 0.38176, "loss_conf": 169.92422, "loss_xy": 646.33181, "loss_wh": 6.33587, "loss": 822.97365, "grad_norm": 1020.49816, "time": 0.15844}
{"mode": "val", "epoch": 27, "iter": 312, "lr": 0.001, "bbox_mAP": 0.651, "bbox_mAP_50": 0.985, "bbox_mAP_75": 0.926, "bbox_mAP_s": 0.65, "bbox_mAP_m": 0.723, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.651 0.985 0.926 0.650 0.723 -1.000"}
{"mode": "val", "epoch": 27, "iter": 63, "lr": 0.001, "memory": 2591, "data_time": 0.1033, "loss_cls": 0.7112, "loss_conf": 191.4885, "loss_xy": 679.70617, "loss_wh": 9.10241, "loss": 881.00827, "time": 0.16382}
{"mode": "train", "epoch": 28, "iter": 100, "lr": 0.001, "memory": 2591, "data_time": 0.02801, "loss_cls": 0.36871, "loss_conf": 176.61305, "loss_xy": 669.41598, "loss_wh": 5.93302, "loss": 852.33076, "grad_norm": 1026.79385, "time": 0.15813}
{"mode": "val", "epoch": 28, "iter": 312, "lr": 0.001, "bbox_mAP": 0.697, "bbox_mAP_50": 0.985, "bbox_mAP_75": 0.939, "bbox_mAP_s": 0.638, "bbox_mAP_m": 0.775, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.697 0.985 0.939 0.638 0.775 -1.000"}
{"mode": "val", "epoch": 28, "iter": 63, "lr": 0.001, "memory": 2591, "data_time": 0.10242, "loss_cls": 0.44975, "loss_conf": 189.44413, "loss_xy": 691.75003, "loss_wh": 5.54333, "loss": 887.18724, "time": 0.16255}
{"mode": "train", "epoch": 29, "iter": 100, "lr": 0.001, "memory": 2591, "data_time": 0.02867, "loss_cls": 0.26207, "loss_conf": 168.50873, "loss_xy": 673.90347, "loss_wh": 5.88926, "loss": 848.56352, "grad_norm": 1006.6124, "time": 0.16023}
{"mode": "val", "epoch": 29, "iter": 312, "lr": 0.001, "bbox_mAP": 0.745, "bbox_mAP_50": 0.985, "bbox_mAP_75": 0.941, "bbox_mAP_s": 0.661, "bbox_mAP_m": 0.824, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.745 0.985 0.941 0.661 0.824 -1.000"}
{"mode": "val", "epoch": 29, "iter": 63, "lr": 0.001, "memory": 2591, "data_time": 0.09974, "loss_cls": 0.42374, "loss_conf": 190.45827, "loss_xy": 677.85413, "loss_wh": 4.22959, "loss": 872.96573, "time": 0.16061}
{"mode": "train", "epoch": 30, "iter": 100, "lr": 0.001, "memory": 2591, "data_time": 0.02873, "loss_cls": 0.27957, "loss_conf": 164.82695, "loss_xy": 650.33506, "loss_wh": 5.48157, "loss": 820.92315, "grad_norm": 980.5472, "time": 0.16039}
{"mode": "val", "epoch": 30, "iter": 312, "lr": 0.001, "bbox_mAP": 0.733, "bbox_mAP_50": 0.985, "bbox_mAP_75": 0.941, "bbox_mAP_s": 0.634, "bbox_mAP_m": 0.811, "bbox_mAP_l": -1.0, "bbox_mAP_copypaste": "0.733 0.985 0.941 0.634 0.811 -1.000"}
{"mode": "val", "epoch": 30, "iter": 63, "lr": 0.001, "memory": 2591, "data_time": 0.09585, "loss_cls": 0.41072, "loss_conf": 198.33333, "loss_xy": 693.92379, "loss_wh": 4.76911, "loss": 897.43696, "time": 0.15706}
